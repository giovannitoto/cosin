% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cosin.R
\name{cosin}
\alias{cosin}
\title{AGS for GIF model with COSIN prior}
\usage{
cosin(
  y,
  wT = NULL,
  wB = NULL,
  x = NULL,
  y_max = Inf,
  wTformula = formula("~ ."),
  wBformula = formula("~ ."),
  xFormula = formula("~ ."),
  stdwT = TRUE,
  stdwB = TRUE,
  stdx = TRUE,
  sd_gammaT = 1,
  sd_gammaB = 1,
  sd_beta = 1,
  a_theta = 1,
  b_theta = 1,
  a_sigma = 1,
  b_sigma = 1,
  alpha = 5,
  p_constant = NULL,
  kinit = NULL,
  kmax = NULL,
  kval = 6,
  nrun = 100,
  burn = round(nrun/4),
  thin = 1,
  start_adapt = 50,
  b0 = 1,
  b1 = 5 * 10^(-4),
  seed = 28,
  output = "all",
  verbose = TRUE
)
}
\arguments{
\item{y}{A \eqn{n\times p} matrix \eqn{y} of gene expression.}

\item{wT}{A matrix \eqn{w_T} of gene-specific technical meta-covariates having \eqn{p} rows; the variables must be numeric or factors.}

\item{wB}{A matrix \eqn{w_B} of gene-specific biological meta-covariates having \eqn{p} rows; the variables must be numeric or factors.}

\item{x}{A matrix \eqn{w} of cell-specific covariates having \eqn{n} rows; the variables must be numeric or factors.}

\item{y_max}{A fixed and known upper bound for the values in \code{y}. Default is \code{Inf}.}

\item{wTformula}{Formula specifying the gene-specific technical meta-covariates used in the process mean inserted in the model.}

\item{wBformula}{Formula specifying the gene-specific biological meta-covariates used in the COSIN prior.}

\item{xFormula}{Formula specifying the covariates inserted in the model; by default all are considered.}

\item{stdwT}{Logical: if \code{TRUE}, numeric gene-specific technical meta-covariates are standardized; by default they are standardized.}

\item{stdwB}{Logical: if \code{TRUE}, numeric gene-specific biological meta-covariates are standardized; by default they are standardized.}

\item{stdx}{Logical: if \code{TRUE}, numeric cell-specific covariates are standardized; by default they are standardized.}

\item{sd_gammaT}{Standard deviation for \eqn{\gamma_{mT}} prior distribution. Default is \eqn{\sigma_{\Gamma_T}=1}.}

\item{sd_gammaB}{Standard deviation for \eqn{\gamma_{hB}} prior distribution. Default is \eqn{\sigma_{\Gamma_B}=1}.}

\item{sd_beta}{Standard deviation for \eqn{\beta_j} prior distribution. Default is \eqn{\sigma_\mu=1}.}

\item{a_theta, b_theta}{Shape (\code{a_theta}) and rate (\code{b_theta}) parameters for \eqn{\vartheta_{jh}^{-1}}. Default is \eqn{a_{\theta}=b_{\theta}=1}.}

\item{a_sigma, b_sigma}{Shape (\code{a_sigma}) and rate (\code{b_sigma}) parameters for \eqn{\sigma_j^{-2}} prior distribution. Default is \eqn{a_{\sigma}=b_{\sigma}=1}.}

\item{alpha}{Non-negative parameter for \eqn{v_m} prior distribution. Default is \eqn{\alpha=5}.}

\item{p_constant}{Factor probability constant. Default is \eqn{c_p=10e\log(p)/p}.}

\item{kinit}{An integer minimun number of latent factors. Default is \code{min(floor(log(p)*kval), p)}.}

\item{kmax}{Maximum number of latent factors. Default is \code{p+1}.}

\item{kval}{An integer number used to calculate the default value of \code{kinit}. Default is 6.}

\item{nrun}{An integer number of iterations. Default is 100.}

\item{burn}{An integer number of burning iterations (number of iterations to discard). Default is \code{round(nrun/4)}.}

\item{thin}{An integer thinning value (number of iterations to skip between saving iterations). Default is 1.}

\item{start_adapt}{An integer number of iterations before adaptation. Default is 50.}

\item{b0, b1}{Positive constants for the adaptive probability \eqn{p(t)=\exp(-b_0-b_1t)}. Default is \eqn{b_0=1} and \eqn{b_1=5\times 10^{-4}}.}

\item{seed}{Seed. Default is 28.}

\item{output}{A vector containing the names of the parameters for which you want to save the draws from the posterior distribution. The possible valid strings are \code{"beta"}, \code{"gammaT"}, \code{"gammaB"}, \code{"eta"}, \code{"lambda"} and \code{"sigmacol"}. Default is \code{"all"}, which is equivalent to writing \code{c("beta", "gammaT", "gammaB", "eta", "lambda", "sigmacol")}.}

\item{verbose}{Logical: if \code{TRUE}, print the number of active factors every 50 iterations. Default is \code{TRUE}.}
}
\value{
A list with the following elements:
\itemize{
\item \code{numFactors}: a vector containing the number of active factors at each saved iteration.
\item \code{beta}: a list containing draws from the posterior distribution of \eqn{\beta=(\beta_1,\ldots,\beta_p)^\top\in\mathbb{R}^{p\times d}}.
\item \code{gammaT}: a list containing draws from the posterior distribution of \eqn{\Gamma_T=(\gamma_{1T},\ldots,\gamma_{q_TT})\in\mathbb{R}^{d\times q_T}}.
\item \code{gammaB}: a list containing draws from the posterior distribution of \eqn{\Gamma_B=(\gamma_{1B},\ldots,\gamma_{kB})\in\mathbb{R}^{q_B\times k}}.
\item \code{eta}: a list containing draws from the posterior distribution of \eqn{\eta=(\eta_1,\ldots,\eta_n)^\top\in\mathbb{R}^{n\times k}}.
\item \code{lambda}: a list containing draws from the posterior distribution of \eqn{\Lambda\in\mathbb{R}^{p\times k}}.
\item \code{sigmacol}: a list containing draws from the posterior distribution of \eqn{(\sigma_1^{-2},\ldots,\sigma_p^{-2})\in\mathbb{R}^{p}}.
\item \code{time}: total elapsed time.
\item \code{y}: the \eqn{n\times p} matrix \eqn{y} of gene expression provided as input to the function.
\item \code{wT}: the \eqn{p\times q_T} matrix of gene-specific technical meta-covariates obtained as a result of variable selection, using \code{wTformula}, standardization of numerical variables, using \code{stdwT}, and conversion of factors into dichotomous variables.
\item \code{wB}: the \eqn{p\times q_B} matrix of gene-specific biological meta-covariates obtained as a result of variable selection, using \code{wBformula}, standardization of numerical variables, using \code{stdwB}, and conversion of factors into dichotomous variables.
\item \code{x}: the \eqn{n\times d} matrix of cell-specific covariates obtained as a result of variable selection, using \code{xFormula}, standardization of numerical variables, using \code{stdx}, and conversion of factors into dichotomous variables.
\item \code{hyperparameters}: a list containing the hyperparameters provided as input to the function.
}
}
\description{
Implementation of the Adaptive Gibbs Sampler (AGS) for a Generalized Infinite Factor (GIF) model with COunt data Structured INfinite factorization (COSIN) prior.
}
\details{
Suppose we have a \eqn{n\times p} matrix \eqn{y} of gene expression containing the counts for \eqn{p}
genes measured in on \eqn{n} cells, a \eqn{n\times d} matrix \eqn{x} of cell-specific covariates,
a \eqn{n\times q_T} matrix \eqn{w_T} of gene-specific technical meta-covariates and
a \eqn{n\times q_B} matrix \eqn{w_B} of gene-specific biological meta-covariates.

We introduce a continuous-valued latent matriz \eqn{z} related to the observed count-valued matrix \eqn{y}
via a STAR operator \eqn{\mathcal{S}:\mathbb{R}\to\mathbb{N}} with \eqn{\mathcal{S}(\cdot)=\mathcal{H}(\mathcal{G}(\cdot))}.
In this case, the transformation operator \eqn{\mathcal{G}} is the exponential trasformation and the rounding operator
\eqn{\mathcal{H}} is such that \eqn{\mathcal{H}(t)=l} if \eqn{t\in\mathbb{A}_l} and \eqn{\{\mathbb{A}_l\}^\infty_{l=1}}
is a known partition of \eqn{\mathbb{R}}.
Thus, the single entry \eqn{y_{ij}} of \eqn{y} is linked to a latent \eqn{z_{ij}} of \eqn{z} as
\eqn{y_{ij} = l \quad\text{if}\quad\exp\{z_{ij}\}\in[l,l+1)}.

The latent variables \eqn{z_{ij}} are modeled via
\deqn{z_{ij} = x_i^\top\beta_j+\epsilon_{ij},}
\deqn{\epsilon_{ij}=\sum_{h=1}^k\lambda_{jh}\eta_{ih}+\varepsilon_{ij},}
\deqn{\varepsilon_{i}\sim N(0,\Sigma),}
where \eqn{\beta_j} is a row of the \eqn{p\times} d matrix \eqn{\beta}, \eqn{\lambda_{jh}} is an element of the \eqn{p\times k} factor loading matrix \eqn{\lambda},
\eqn{\eta_{ih}} is an element of the \eqn{n\times k} latent factor matrix \eqn{\eta}, and
\eqn{\varepsilon_{1},\ldots,\varepsilon_{n}} are iid random errors with \eqn{\Sigma=diag(\sigma^2_1,\ldots,\sigma^2_p)}.

Following a Bayesian approach we elicit suitable prior distributions for the model parameters:
\deqn{\beta_j\sim N_d(\Gamma_Tw_{jT},\sigma^2_\beta I_d), \quad \gamma_{mT}\sim N_d(0,\sigma^2_{\Gamma_T}I_d),}
\deqn{\eta_i\sim N_k(0, I_k), \quad \sigma^{-2}_j\sim Ga(a_\sigma,b_\sigma),}
\deqn{\lambda_{jh}\sim N(0,\vartheta_{jh}\rho_h\phi_{jh}), \quad \vartheta^{-1}_h\sim Ga(a_\theta,b_\theta),}
\deqn{\rho_h\sim Bern(1-\pi_h), \quad \pi_h=\sum_{l=1}^hv_l\prod_{m=1}^{l-1}v_m, \quad v_m\sim Beta(1,\alpha),}
\deqn{E[\phi_{jh}] = c_p\text{logit}^{-1}(w_{jB}^\top\gamma_{hB}), \quad \gamma_{hB}\sim N_{q_B}(0,\sigma^2_{\Gamma_B}I_{q_B}),}
where \eqn{\gamma_{mT}} is a column of the \eqn{d\times q_T} coefficient matrix \eqn{\Gamma_T},
\eqn{\gamma_{hB}} is a column of the \eqn{q_B\times k} coefficient matrix \eqn{\Gamma_B} and \eqn{c_p\in(0,1)} is a offset.
}
